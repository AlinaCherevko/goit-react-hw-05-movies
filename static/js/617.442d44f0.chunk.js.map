{"version":3,"file":"static/js/617.442d44f0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","webpack://react-homework-template/./src/components/FilmDetails/FilmDetails.module.css?7909","webpack://react-homework-template/./src/components/Genres/Genres.module.css?1510","components/Genres/Genres.jsx","components/FilmDetails/FilmDetails.jsx","webpack://react-homework-template/./src/pages/MoviePageDetails.module.css?4260","pages/MoviePageDetails.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"personImg\":\"Cast_personImg__po58H\",\"personWrap\":\"Cast_personWrap__MpuWf\",\"personName\":\"Cast_personName__y5ayY\",\"personList\":\"Cast_personList__vgxa9\",\"personItem\":\"Cast_personItem__xv-rk\"};","import React, { useEffect, useState } from 'react';\n\nimport { getDataAboutCast } from 'servises/api';\nimport css from './Cast.module.css';\n\nexport const Cast = ({ id }) => {\n  const path = 'https://image.tmdb.org/t/p/original';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    if (!id) return;\n    const getCastById = async () => {\n      const { data } = await getDataAboutCast(id);\n      // console.log(data);\n      const { cast } = data;\n      // console.log(cast);\n      setCast(cast);\n    };\n\n    getCastById();\n  }, [id]);\n\n  return (\n    <div>\n      <ul className={css.personList}>\n        {Array.isArray(cast) &&\n          cast.map(person => (\n            <li className={css.personItem} key={person.id}>\n              <img\n                className={css.personImg}\n                src={\n                  person.profile_path ? path + person.profile_path : defaultImg\n                }\n                alt={person.name}\n              />\n              <div className={css.personWrap}>\n                <p className={css.personName}>{person.name}</p>\n                <p className={css.person}>{person.character}</p>\n              </div>\n            </li>\n          ))}\n      </ul>{' '}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewList\":\"Reviews_reviewList__uMBar\",\"reviewTitle\":\"Reviews_reviewTitle__-9Xsn\",\"review\":\"Reviews_review__sHbuN\"};","import React, { useEffect, useState } from 'react';\nimport { getDataAboutReviews } from 'servises/api';\nimport css from './Reviews.module.css';\n\nexport const Reviews = ({ id }) => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    if (!id) return;\n    const getReviewById = async () => {\n      const { data } = await getDataAboutReviews(id);\n\n      const { results } = data;\n      // console.log(results);\n      setResults(results);\n    };\n\n    getReviewById();\n  }, [id]);\n\n  return (\n    <div>\n      {results.length !== 0 ? (\n        <ul className={css.reviewList}>\n          {Array.isArray(results) &&\n            results.map(review => (\n              <li key={review.id}>\n                <p className={css.reviewTitle}>{review.author}</p>\n                <p className={css.review}>{review.content}</p>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <p className={css.reviewTitle}>\n          We dont have any reviews for this movie\n        </p>\n      )}\n    </div>\n  );\n};\n// to={`/movies/${result.id}`}\n","// extracted by mini-css-extract-plugin\nexport default {\"detailsWrapper\":\"FilmDetails_detailsWrapper__fEl3k\",\"detailsImage\":\"FilmDetails_detailsImage__-yyxN\",\"detailsWrapperText\":\"FilmDetails_detailsWrapperText__RXE6b\",\"detailsTitle\":\"FilmDetails_detailsTitle__DFmbO\",\"detailsDescription\":\"FilmDetails_detailsDescription__ZzZ-R\",\"detailsAfterTitle\":\"FilmDetails_detailsAfterTitle__Il60z\"};","// extracted by mini-css-extract-plugin\nexport default {\"genresList\":\"Genres_genresList__uSAcY\",\"description\":\"Genres_description__IIl+R\"};","import React from 'react';\nimport css from './Genres.module.css';\n\nexport const Genres = ({ genresArray }) => {\n  console.log(genresArray);\n  return (\n    <ul className={css.genresList}>\n      {Array.isArray(genresArray) &&\n        genresArray.slice(0, 2).map(genre => (\n          <li className={css.description} key={genre.id}>\n            {genre.name}\n          </li>\n        ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport css from './FilmDetails.module.css';\nimport { Genres } from 'components/Genres/Genres';\n\nexport const FilmDetails = ({ results }) => {\n  const path = 'https://image.tmdb.org/t/p/original';\n  const rating = Math.floor(results.vote_average * 10);\n\n  //   console.log(results.genres);\n  return (\n    <>\n      <div className={css.detailsWrapper}>\n        <img\n          className={css.detailsImage}\n          src={path + results.poster_path}\n          alt={results.title}\n        />\n        <div className={css.detailsWrapperText}>\n          <h2 className={css.detailsTitle}>{results.title}</h2>\n          <p className={css.detailsAfterTitle}>\n            Release Date{' '}\n            <span className={css.detailsDescription}>\n              {results.release_date}\n            </span>\n          </p>\n\n          <p className={css.detailsAfterTitle}>\n            User rating:\n            <span className={css.detailsDescription}> {rating}%</span>\n          </p>\n\n          <p className={css.detailsAfterTitle}>Overview</p>\n          <span className={css.detailsDescription}>{results.overview}</span>\n          <p className={css.detailsAfterTitle}>Genres</p>\n          <Genres genresArray={results.genres} />\n          {results.tagline && (\n            <div>\n              <p className={css.detailsAfterTitle}>Tagline</p>\n              <span className={css.detailsDescription}>{results.tagline}</span>\n            </div>\n          )}\n        </div>\n      </div>\n      <div>\n        {/* <Cast id={results.id} />\n        <Reviews id={results.id} /> */}\n      </div>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"infoWrap\":\"MoviePageDetails_infoWrap__Ln64g\",\"infoTitle\":\"MoviePageDetails_infoTitle__hDee2\",\"infoWrapLinks\":\"MoviePageDetails_infoWrapLinks__F9k40\",\"goBackLink\":\"MoviePageDetails_goBackLink__oVfH2\",\"link\":\"MoviePageDetails_link__GyVO0\"};","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { Cast } from 'components/Cast/Cast';\nimport { Reviews } from 'components/Reviews/Reviews';\nimport { FilmDetails } from 'components/FilmDetails/FilmDetails';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { getDataById } from 'servises/api';\nimport css from './MoviePageDetails.module.css';\n\nconst MoviePageDetails = () => {\n  //   const params = useParams();\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const [results, setResults] = useState('');\n\n  useEffect(() => {\n    if (results) return;\n\n    const getResultsById = async () => {\n      try {\n        const { data } = await getDataById(movieId);\n\n        setResults(data);\n        // console.log(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getResultsById();\n  }, [movieId, results]);\n  return (\n    <>\n      <Link className={css.goBackLink} to={backLinkRef.current}>\n        Go Back\n      </Link>\n      <FilmDetails results={results} />\n      <div className={css.infoWrap}>\n        <p className={css.infoTitle}>Additional information</p>\n        <div className={css.infoWrapLinks}>\n          <Link to=\"cast\">\n            <p className={css.link}>Cast</p>\n          </Link>\n          <Link to=\"reviews\">\n            <p className={css.link}>Reviews</p>\n          </Link>\n        </div>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast id={results.id} />} />\n          <Route path=\"reviews\" element={<Reviews id={results.id} />} />\n        </Routes>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviePageDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNzNkMWNlMGNiNmEzYWMzYzFkYjM4ZDM3N2I4MjRlZiIsInN1YiI6IjY0ODYzMjhlMDI4ZjE0MDEzYjg2MmZlYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.HoABGc9RClt9cVwg4PCMlGrDzSxlVjcxQL3XcwPvhY0';\n\nexport async function getData() {\n  const { data } = await axios.get(`/trending/movie/day?language=en-US`);\n  console.log(data);\n  return data;\n}\n// getData();\n\nexport async function getDataByQuery(query) {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&language=en-US`\n  );\n  // console.log(data);\n  return data;\n}\n\nexport async function getDataById(id) {\n  const data = await axios.get(`/movie/${id}?language=en-US`);\n  //console.log(data);\n  return data;\n}\n// getDataById();\n\nexport async function getDataAboutCast(id) {\n  const data = await axios.get(`/movie/${id}/credits?language=en-US`);\n  //console.log(data);\n  return data;\n}\n\nexport async function getDataAboutReviews(id) {\n  const data = await axios.get(`/movie/${id}/reviews?language=en-US`);\n  //console.log(data);\n  return data;\n}\n\nexport async function getTrailer(id) {\n  const { data } = await axios(`/movie/${id}/videos`);\n  const trailerResults = data.results;\n  console.log(trailerResults);\n  if (trailerResults.length === 0) return;\n  const trailers = trailerResults.filter(\n    trailer => trailer.type === 'Trailer' && trailer.site === 'YouTube'\n  );\n  console.log(trailers);\n\n  if (trailers.length === 0) return;\n\n  console.log(trailers[0]);\n}\ngetTrailer(496243);\n"],"names":["Cast","_ref","id","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCastById","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getDataAboutCa","data","_context","prev","next","getDataAboutCast","sent","stop","apply","arguments","_jsxs","children","_jsx","className","css","Array","isArray","map","person","src","profile_path","alt","name","character","Reviews","results","setResults","getReviewById","_yield$getDataAboutRe","getDataAboutReviews","length","review","author","content","Genres","genresArray","console","log","slice","genre","FilmDetails","rating","Math","floor","vote_average","_Fragment","poster_path","title","release_date","overview","genres","tagline","_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","getResultsById","_yield$getDataById","getDataById","t0","message","Link","to","current","Suspense","fallback","Loader","Routes","Route","path","element","getData","_getData","_yield$axios$get","axios","abrupt","getDataByQuery","_x","_getDataByQuery","_callee2","query","_yield$axios$get2","_context2","concat","_x2","_getDataById","_callee3","_context3","_x3","_getDataAboutCast","_callee4","_context4","_x4","_getDataAboutReviews","_callee5","_context5","_getTrailer","_callee6","_yield$axios","trailerResults","trailers","_context6","filter","trailer","type","site","_x5","getTrailer"],"sourceRoot":""}